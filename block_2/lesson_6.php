<?php 
//===================================================================
//=============== Практика на пользовательские функции ==============
//===================================================================

//Сделайте функцию, которая принимает строку на русском языке, а возвращает ее транслит.

function translit($string){
	    $converter = array(
        'а' => 'a',   'б' => 'b',   'в' => 'v',
        'г' => 'g',   'д' => 'd',   'е' => 'e',
        'ё' => 'e',   'ж' => 'zh',  'з' => 'z',
        'и' => 'i',   'й' => 'y',   'к' => 'k',
        'л' => 'l',   'м' => 'm',   'н' => 'n',
        'о' => 'o',   'п' => 'p',   'р' => 'r',
        'с' => 's',   'т' => 't',   'у' => 'u',
        'ф' => 'f',   'х' => 'h',   'ц' => 'c',
        'ч' => 'ch',  'ш' => 'sh',  'щ' => 'sch',
        'ь' => '\'',  'ы' => 'y',   'ъ' => '\'',
        'э' => 'e',   'ю' => 'yu',  'я' => 'ya',
        
        'А' => 'A',   'Б' => 'B',   'В' => 'V',
        'Г' => 'G',   'Д' => 'D',   'Е' => 'E',
        'Ё' => 'E',   'Ж' => 'Zh',  'З' => 'Z',
        'И' => 'I',   'Й' => 'Y',   'К' => 'K',
        'Л' => 'L',   'М' => 'M',   'Н' => 'N',
        'О' => 'O',   'П' => 'P',   'Р' => 'R',
        'С' => 'S',   'Т' => 'T',   'У' => 'U',
        'Ф' => 'F',   'Х' => 'H',   'Ц' => 'C',
        'Ч' => 'Ch',  'Ш' => 'Sh',  'Щ' => 'Sch',
        'Ь' => '\'',  'Ы' => 'Y',   'Ъ' => '\'',
        'Э' => 'E',   'Ю' => 'Yu',  'Я' => 'Ya',
    );
    return strtr($string, $converter);
}

echo translit('Николайчук Василий Илларионович');

echo "<br>";

// Сделайте функцию, которая возвращает множественное или единственное число существительного. Пример: 1 яблоко, 2 (3, 4) яблока, 5 яблок. Функция первым параметром принимает число, а следующие 3 параметра — форма для единственного числа, для чисел два, три, четыре и для чисел, больших четырех, например, func(3, 'яблоко', 'яблока', 'яблок').

function getPluralOrSingular($number, $form_one, $form_two_three_four, $form_many){
	if ($number == 1) {
		$result = $number.' '.$form_one;
	}
	if ($number >1 and $number < 5) {
		$result = $number.' '.$form_two_three_four;
	}
	if ($number > 4) {
		$result = $number.' '.$form_many;
	}
	return $result;
}

echo getPluralOrSingular(6, 'банан', 'банана', 'бананов'); // Выведет 6 бананов



// Найдите все счастливые билеты. Счастливый билет - это билет, в котором сумма первых трех цифр его номера равна сумме вторых трех цифр его номера.


function happyTicket($string){
	$arr = str_split($string, 1);

	$sum_first3_dig = 0;
	for ($i=0; $i < 3; $i++) { 
		$sum_first3_dig += $arr[$i];
	}

	$sum_second3_dig = 0;
	for ($g=3; $g < 6; $g++) { 
		$sum_second3_dig += $arr[$g];
	}

	return $sum_first3_dig+$sum_second3_dig;
}

echo happyTicket(555122); //Выведет 20

echo "<br>";
// Дружественные числа - два различных числа, для которых сумма всех собственных делителей первого числа равна второму числу и наоборот, сумма всех собственных делителей второго числа равна первому числу.
// Например, 220 и 284. Делители для 220 это 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 и 110, сумма делителей равна 284. Делители для 284 это 1, 2, 4, 71 и 142, их сумма равна 220.
// Задача: найдите все пары дружественных чисел в промежутке от 1 до 10000. Для этого сделайте вспомогательную функцию, которая находит все делители числа и возвращает их в виде массива. Также сделайте функцию, которая параметром принимает массив, а возвращает его сумму.

function getDivisorsSum($number){
	$sum = 0;
	for ($i=1; $i < $number; $i++) { 
		if ($number % $i === 0) {
			$sum += $i;
		}
	}
	return $sum;
}


function frendlyNumber($n_one, $n_two)
{
	if (getDivisorsSum($n_one) == $n_two and getDivisorsSum($n_two) == $n_one and $n_one !== $n_two and $n_one < $n_two) {
		return "Числа ".$n_one.' и '.$n_two.' являются дружественными.<br>';
	}
}

// for ($i=0; $i < 1220; $i++) {         //Выведет числа 220 и 284 являются дружественными.
// 	for ($k=0; $k < 1220; $k++) {     //Выведет числа 1184 и 1210 являются дружественными.
// 		frendlyNumber($i, $k);
// 	}
// }
// Алгоритм очень тяжелый, но рабочий :)




 ?>