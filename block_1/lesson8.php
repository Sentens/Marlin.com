<?php 
//===================================================================
//======================== Работа с функциями для массивов ===========
//===================================================================

// Дан массив $arr. Подсчитайте количество элементов этого массива.
$arr = ['123', 'gddf', 'dgg', '33', 'ggd', 'dg', 'dg'];
echo count($arr);

// Дан массив $arr. С помощью функции count выведите последний элемент данного массива.
$arr = ['123', 'gddf', 'dgg', '33', 'ggd', 'dg', 'dg'];
echo $arr[count($arr)-1];

// Дан массив с числами. Проверьте, что в нем есть элемент со значением 3.
$arr = ['456', '567', '46897', '79789', '645', '221', '3'];
if (in_array('3', $arr) == true) {
   echo "Есть";
}else{
    echo "Нету";
}

// Работа с array_sum и array_product
// Для решения задач данного блока вам понадобятся следующие функции: array_sum, array_product.

// Дан массив [1, 2, 3, 4, 5]. Найдите сумму элементов данного массива.
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr);

// Дан массив [1, 2, 3, 4, 5]. Найдите произведение (умножение) элементов данного массива.
$arr = [1, 2, 3, 4, 5];
echo array_product($arr);

// Дан массив $arr. С помощью функций array_sum и count найдите среднее арифметическое элементов (сумма элементов делить на их количество) данного массива.
$arr = [1, 2, 3, 4, 5];
$arr_sum =  array_sum($arr);
$arr_count = count($arr);
echo $arr_sum/$arr_count;

// Работа с range
// Для решения задач данного блока вам понадобятся следующие функции: range.
// Создайте массив, заполненный числами от 1 до 100.
$arr = range(1, 100);
var_dump($arr);

// Создайте массив, заполненный буквами от 'a' до 'z'.
$arr = range('a', 'z');
var_dump($arr);

// Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл. 
$arr = range(1, 9);
$str = implode('-', $arr);
echo $str;
// Найдите сумму чисел от 1 до 100 не используя цикл.
$arr = range(1, 100);
echo array_sum($arr);

// Найдите произведение чисел от 1 до 10 не используя цикл.
$arr = range(1, 10);
echo array_sum($arr);

// Работа с array_merge
// Для решения задач данного блока вам понадобятся следующие функции: array_merge.
// Даны два массива: первый с элементами 1, 2, 3, второй с элементами 'a', 'b', 'c'. Сделайте из них массив с элементами 1, 2, 3, 'a', 'b', 'c'.
$arr1 = [1, 2, 3];
$arr2 = ['a', 'b', 'c'];
$arr = array_merge($arr1, $arr2);
var_dump($arr);

// Работа с array_slice
// Для решения задач данного блока вам понадобятся следующие функции: array_slice.
// Дан массив с элементами 1, 2, 3, 4, 5. С помощью функции array_slice создайте из него массив $result с элементами 2, 3, 4.
$arr = [1, 2, 3, 4, 5];
$result = array_slice($arr, 1, 3);
var_dump($result);

// Работа с array_splice
// Для решения задач данного блока вам понадобятся следующие функции: array_splice.
// Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice преобразуйте массив в [1, 4, 5].
$arr = [1, 2, 3, 4, 5];
$splice_arr = array_splice($arr, 1, 2);
var_dump($arr);

// Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice запишите в новый массив элементы [2, 3, 4].
$arr = [1, 2, 3, 4, 5];
$splice_arr = array_splice($arr, 1, 3);
var_dump($splice_arr);

// Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 3, 0, [a, b, c]);
var_dump($arr);

// Дан массив [1, 2, 3, 4, 5]. С помощью функции array_splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
$arr = [1, 2, 3, 4, 5];
array_splice($arr, 1, 0, [a, b]);
array_splice($arr, 6, 0, [c]);
array_splice($arr, 8, 0, [e]);
var_dump($arr);

// Работа с array_keys, array_values, array_combine
// Для решения задач данного блока вам понадобятся следующие функции: array_keys, array_values, array_combine.
// Дан массив 'a'=>1, 'b'=>2, 'c'=>3'. Запишите в массив $keys ключи из этого массива, а в $values – значения.
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$keys = array_keys($arr);
$values = array_values($arr);

// Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Создайте с их помощью массив 'a'=>1, 'b'=>2, 'c'=>3'.
$arr = ['a', 'b', 'c'];
$arr2 = [1, 2, 3];
$arr3 = array_combine($arr, $arr2);

// Работа с array_flip, array_reverse
// Для решения задач данного блока вам понадобятся следующие функции: array_flip, array_reverse.
// Дан массив 'a'=>1, 'b'=>2, 'c'=>3. Поменяйте в нем местами ключи и значения.
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
$result = array_flip($arr);
var_dump($result);

// Дан массив с элементами 1, 2, 3, 4, 5. Сделайте из него массив с элементами 5, 4, 3, 2, 1.
$arr = [1, 2, 3, 4, 5];
$result = array_reverse($arr);
var_dump($result);

// Работа с array_search
// Для решения задач данного блока вам понадобятся следующие функции: array_search.
// Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-'.
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$result = array_search('-', $arr);
var_dump($result);

// Дан массив ['a', '-', 'b', '-', 'c', '-', 'd']. Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice.
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
$position = array_search('-', $arr);
$result = array_splice($arr, $position, $position);
var_dump($arr);

// Работа с array_replace
// Для решения задач данного блока вам понадобятся следующие функции: array_replace.
// Дан массив ['a', 'b', 'c', 'd', 'e']. Поменяйте элемент с ключом 0 на '!', а элемент с ключом 3 - на '!!'.
$arr = ['a', 'b', 'c', 'd', 'e'];
$result = array_replace($arr, ['0' => '!', '3' => '!!']);
var_dump($result);


// Работа с сортировкой
// Для решения задач данного блока вам понадобятся следующие функции: функции для сортировки,
// Дан массив '3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'. Попробуйте на нем различные типы сортировок.
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
sort($arr);
var_dump($arr);

// Работа с array_rand
// Для решения задач данного блока вам понадобятся следующие функции: array_rand.
// Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный ключ из данного массива.
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
echo array_rand($arr);

// Дан массив с элементами 'a'=>1, 'b'=>2, 'c'=>3. Выведите на экран случайный элемент данного массива.
$arr = ['a'=>1, 'b'=>2, 'c'=>3];
echo array_rand($arr);
echo $arr[array_rand($arr)];

// Работа с shuffle
// Для решения задач данного блока вам понадобятся следующие функции: shuffle.
// Дан массив $arr. Перемешайте его элементы в случайном порядке.
$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];
shuffle($arr);
var_dump($arr);

// Заполните массив числами от 1 до 25 с помощью range, а затем перемешайте его элементы в случайном порядке.
$arr = range(1, 25);
shuffle($arr);
var_dump($arr);

// Создайте массив, заполненный буквами от 'a' до 'z' так, чтобы буквы шли в случайном порядке и не повторялись.
$arr = range(a, z);
shuffle($arr);
var_dump($arr);

// Сделайте строку длиной 6 символов, состоящую из маленьких английских букв, расположенных в случайном порядке. Буквы не должны повторяться.
$arr = range(a, f);
shuffle($arr);
$str = implode('', $arr);
echo $str;

// Работа с array_unique
// Для решения задач данного блока вам понадобятся следующие функции: array_unique.
// Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него повторяющиеся элементы.
$arr = ['a', 'b', 'c', 'b', 'a'];
$result = array_unique($arr);
var_dump($result);

// Работа с array_shift, array_pop, array_unshift, array_push
// Для решения задач данного блока вам понадобятся следующие функции: array_shift, array_pop, array_unshift, array_push.
// Дан массив с элементами 1, 2, 3, 4, 5. Выведите на экран его первый и последний элемент, причем так, чтобы в исходном массиве они исчезли.
$arr = [1, 2, 3, 4, 5];
$result = array_shift($arr);
$result2 = array_pop($arr);
var_dump($result);
var_dump($result2);

// Дан массив с элементами 1, 2, 3, 4, 5. Добавьте ему в начало элемент 0, а в конец - элемент 6.
$arr = [1, 2, 3, 4, 5];
array_unshift($arr, '0');
array_push($arr, '6');

// Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8. С помощью цикла и функций array_shift и array_pop выведите на экран его элементы в следующем порядке: 18273645.
$arr = [1, 2, 3, 4, 5, 6, 7, 8];
$str = '';
while (count($arr) > 0) {
    $str .= array_shift($arr);
    $str .= array_pop($arr);
}
echo $str;

// Работа с array_pad, array_fill, array_fill_keys, array_chunk
// Для решения задач данного блока вам понадобятся следующие функции: array_pad, array_fill, array_fill_keys, array_chunk.
// Дан массив с элементами 'a', 'b', 'c'. Сделайте из него массив с элементами 'a', 'b', 'c', '-', '-', '-'.
$arr = ['a', 'b', 'c'];
$arr = array_pad($arr, 6, '-');
var_dump($arr);

// Заполните массив 10-ю буквами 'x'.
$arr = array_fill(0, 10, 'x');
var_dump($arr);


// Создайте массив, заполненный целыми числами от 1 до 20. С помощью функции array_chunk разбейте этот массив на 5 подмассивов ([1, 2, 3, 4]; [5, 6, 7, 8] и т.д.).
$arr = range(1,20);
var_dump(array_chunk($arr, 4));

// Работа с array_count_values
// Для решения задач данного блока вам понадобятся следующие функции: array_count_values.
// Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз встречается каждая из букв.
$arr = ['a', 'b', 'c', 'b', 'a'];
var_dump(array_count_values($arr));

// Работа с array_map
// Для решения задач данного блока вам понадобятся следующие функции: array_map.
// Дан массив с элементами 1, 2, 3, 4, 5. Создайте новый массив, в котором будут лежать квадратные корни данных элементов.
$arr = [1, 2, 3, 4, 5];
$result = array_map('sqrt', $arr);
var_dump($result);

// Дан массив с элементами '<b>php</b>', '<i>html</i>'. Создайте новый массив, в котором из элементов будут удалены теги.
$arr = ['<b>php</b>', '<i>html</i>'];
$result = array_map('strip_tags', $arr);
var_dump($result);


// Дан массив с элементами ' a ', ' b ', ' с '. Создайте новый массив, в котором будут данные элементы без концевых пробелов.
$arr = [' a ', ' b ', ' с '];
$result = array_map('trim', $arr);
var_dump($result);


// Работа с array_intersect, array_diff
// Для решения задач данного блока вам понадобятся следующие функции: array_intersect, array_diff.
// Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые есть и в том, и в другом массиве.
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_intersect($arr1, $arr2);
var_dump($result);

// Дан массив с элементами 1, 2, 3, 4, 5 и массив с элементами 3, 4, 5, 6, 7. Запишите в новый массив элементы, которые не присутствуют в обоих массивах одновременно.
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$result = array_merge(array_diff($arr1, $arr2), array_diff($arr2, $arr1)); // 


// Задачи
// Дана строка '1234567890'. Найдите сумму цифр из этой строки не используя цикл.
$str = '1234567890';
$arr = str_split($str);
var_dump(array_sum($arr));

// Создайте массив ['a'=>1, 'b'=2... 'z'=>26] не используя цикл.
$arr3 = array_combine(range(a, z), range(1, 26));
var_dump($arr3);

// Создайте массив вида [[1, 2, 3], [4, 5, 6], [7, 8, 9]] не используя цикл. Показать подсказку. Показать подсказку.
$arr =  range(1, 9);
var_dump(array_chunk($arr, 3));

// Дан массив с элементами 1, 2, 4, 5, 5. Найдите второй по величине элемент. В нашем случае это будет 4.
$arr = [1, 2, 4, 5, 5];
$arr = array_unique($arr);
arsort($arr);
$result = array_splice($arr, 1, 1);
echo $result[0];



 ?>